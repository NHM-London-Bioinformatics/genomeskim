{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/genomeskim/master/nextflow_schema.json",
    "title": "nf-core/genomeskim pipeline parameters",
    "description": "QC and filtering of genome skims, followed by organelle assembly and/or genome analysis",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "schema": "assets/schema_input.json",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/genomeskim/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "general_options": {
            "title": "General options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "readlength": {
                    "type": "string"
                },
                "organellerefs": {
                    "type": "string"
                }
            }
        },
        "gofetch_options": {
            "title": "GoFetch options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "gofetch_taxon": {
                    "type": "string"
                },
                "gofetch_lineage": {
                    "type": "string"
                },
                "gofetch_target": {
                    "type": "string"
                },
                "gofetch_db": {
                    "type": "string",
                    "default": "refseq"
                },
                "gofetch_minn": {
                    "type": "integer",
                    "default": 10
                },
                "gofetch_maxn": {
                    "type": "integer",
                    "default": 100
                },
                "gofetch_entrezemail": {
                    "type": "string"
                }
            }
        },
        "adapter_removal_and_filtering": {
            "title": "Adapter removal and filtering",
            "type": "object",
            "description": "Parameters for fastp adapter removal and quality/length filtering",
            "default": "",
            "properties": {
                "fastp_disable_adapter_trim": {
                    "type": "boolean",
                    "fa_icon": "fas fa-check-square",
                    "description": "Don't do adapter trimming"
                },
                "fastp_adapter_fasta": {
                    "type": "string",
                    "fa_icon": "fas fa-dna",
                    "description": "Path to fasta file containing adapters to remove",
                    "help_text": "Fastp will auto-detect most common adapters, but to supply extra adapters to remove, supply them in a fasta file. Passed to `fastp --adapter_fasta`, see https://github.com/OpenGene/fastp#adapters",
                    "format": "file-path"
                },
                "fastp_quality_filter_pclim": {
                    "type": "number",
                    "fa_icon": "fas fa-filter",
                    "description": "The percentage of bases that may be unqualified to retain a read",
                    "default": 100,
                    "help_text": "Passed through to `fastp --unqualified_percent_limit`, see https://github.com/OpenGene/fastp#quality-filter\n\nBy default, no quality filtering is done, as recommended for getorganelle inputs, see https://github.com/Kinggerm/GetOrganelle#starting-from-reads. Decrease this value to perform quality filtering."
                },
                "fastp_quality_filter_phred": {
                    "type": "number",
                    "fa_icon": "fas fa-filter",
                    "description": "The minimum phred score to qualify a base",
                    "default": 15,
                    "help_text": "Passed through to `fastp --unqualified_percent_limit`, see https://github.com/OpenGene/fastp#quality-filter\n\nNote that this parameter has no effect if --fastp_quality_filter_pclim is set to 100, the default. Thus by default, no quality filtering is done, as recommended for getorganelle inputs, see https://github.com/Kinggerm/GetOrganelle#starting-from-reads."
                },
                "fastp_length_filter_min": {
                    "type": "number",
                    "fa_icon": "fas fa-filter",
                    "description": "Minimum read length to be retained",
                    "help_text": "Passed through to `fastp --length_required`, see https://github.com/OpenGene/fastp#length-filter",
                    "default": 15
                },
                "fastp_save_outputs": {
                    "type": "boolean",
                    "fa_icon": "fas fa-check-square",
                    "description": "Save all fastp output files in outdir"
                }
            },
            "help_text": "Parameters for removing trimming adapter sequences, quality filtering and length filtering.",
            "fa_icon": "fas fa-filter"
        },
        "getorganelle_options": {
            "title": "GetOrganelle options",
            "type": "object",
            "description": "Parameters for GetOrganelle assembly",
            "default": "",
            "properties": {
                "getorganelle_genometype": {
                    "type": "string",
                    "help_text": "Passed through to `get_organelle_from_reads.py -F`. Must be one or more (comma-separated list) of:\nembplant_pt\nother_pt\nembplant_mt\nembplant_nr\nanimal_mt\nfungus_mt\nfungus_nr\nanonym\nSee https://github.com/Kinggerm/GetOrganelle/wiki/Usage#get_organelle_from_readspy",
                    "fa_icon": "fas fa-book",
                    "description": "Target organelle genome type, in GetOrganelle format"
                },
                "getorganelle_rseed": {
                    "type": "integer",
                    "default": 12345,
                    "description": "Random seed number for reproducibility",
                    "fa_icon": "fas fa-dice"
                },
                "getorganelle_maxreads": {
                    "type": "integer",
                    "fa_icon": "fas fa-caret-up",
                    "description": "Maximum number of reads to use from inputs. Default: no limit"
                },
                "getorganelle_ref_action": {
                    "type": "string",
                    "description": "Should the GetOrganelle default reference databases be used, and if so how.",
                    "help_text": "If no custom references are specified (taxon or lineage for retrieval from GoFetch and/or reference(s) sequence files to --organellerefs), by default the pipeline will use the default GetOrganelle seed and label sequences.\nIf any custom references are supplied, seed and label sequences will instead derive from the custom references. To fine-tunes which sequences will be used as GetOrganelle seed and label in this case, use the following:\n`add_seeds`: combine the default GetOrganelle seeds with those derived from custom references\n`add_labels`: combine the default GetOrganelle labels with those derived from custom references\n`add_both`: combine both default Getorganelle seeds with custom reference seeds and default GetOrganelle labels with custom reference labels\n`only_seeds`: ignore the custom reference seeds and use only the default GetOrganelle seeds\n`only_labels`: ignore the custom reference genes and use only the default GetOrganelle labels\n`only_both: ignore the custom references entirely and use only the defaulte GetOrganelle seeds and labels"
                },
                "getorganelle_reducereads": {
                    "type": "integer",
                    "help_text": "Default inf: no reducing of reads for coverage",
                    "fa_icon": "fas fa-sort-down",
                    "description": "Maximum number of reads according to coverage. Default: no limit"
                },
                "getorganelle_save_outputs": {
                    "type": "boolean",
                    "fa_icon": "fas fa-check-square",
                    "description": "Save all getorganelle output files in outdir"
                }
            },
            "required": ["getorganelle_genometype"],
            "fa_icon": "fas fa-circle-notch",
            "help_text": ""
        },
        "new_group_1": {
            "title": "New Group 1",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "blastdbpath": {
                    "type": "string"
                },
                "taxdumppath": {
                    "type": "string"
                }
            }
        },
        "mitos_options": {
            "title": "MITOS options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "mitos_geneticcode": {
                    "type": "integer"
                },
                "mitos_plots": {
                    "type": "boolean"
                },
                "mitos_refdbid": {
                    "type": "string"
                }
            }
        },
        "genome_statistics_options": {
            "title": "Genome Statistics options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "jellyfish_s": {
                    "type": "string",
                    "default": "1G"
                },
                "genomestats_kmer": {
                    "type": "integer",
                    "default": 21
                },
                "genomescope2_maxk": {
                    "type": "integer",
                    "default": 1000
                }
            }
        },
        "skipping_steps": {
            "title": "Skipping steps",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "skip_validation": {
                    "type": "boolean"
                },
                "skip_annotation": {
                    "type": "boolean"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean"
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "monochromeLogs": {
                    "type": "boolean",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, only MS Teams is supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "validationFailUnrecognisedParams": {
                    "type": "boolean",
                    "hidden": true
                },
                "validationLenientMode": {
                    "type": "boolean",
                    "hidden": true
                },
                "validationShowHiddenParams": {
                    "type": "boolean",
                    "hidden": true
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 8,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "16.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "2.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
<<<<<<< HEAD
=======
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "validationShowHiddenParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "validationFailUnrecognisedParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters fails when an unrecognised parameter is found.",
                    "hidden": true,
                    "help_text": "By default, when an unrecognised parameter is found, it returns a warinig."
                },
                "validationLenientMode": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters in lenient more.",
                    "hidden": true,
                    "help_text": "Allows string values that are parseable as numbers or booleans. For further information see [JSONSchema docs](https://github.com/everit-org/json-schema#lenient-mode)."
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                }
            }
>>>>>>> TEMPLATE
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/general_options"
        },
        {
            "$ref": "#/definitions/gofetch_options"
        },
        {
            "$ref": "#/definitions/adapter_removal_and_filtering"
        },
        {
            "$ref": "#/definitions/getorganelle_options"
        },
        {
            "$ref": "#/definitions/new_group_1"
        },
        {
            "$ref": "#/definitions/mitos_options"
        },
        {
            "$ref": "#/definitions/genome_statistics_options"
        },
        {
            "$ref": "#/definitions/skipping_steps"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        }
    ]
}
